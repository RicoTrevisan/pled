name: Build and Release

on:
    push:
        branches:
            - main
        tags:
            - "v*"
    pull_request:
        branches:
            - main

permissions:
    contents: write

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Elixir
              uses: erlef/setup-beam@v1
              with:
                  elixir-version: "1.18"
                  otp-version: "27.0"

            - name: Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: deps
                  key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
                  restore-keys: ${{ runner.os }}-mix-

            - name: Install Zig
              uses: mlugg/setup-zig@v2
              with:
                  version: 0.14.0

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y xz-utils

            - name: Install dependencies
              run: mix deps.get

            - name: Build release binaries
              run: MIX_ENV=prod mix release

            - name: Extract version
              id: version
              run: |
                  if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
                    VERSION=${GITHUB_REF#refs/tags/v}
                    echo "Using version from tag: $VERSION"
                  else
                    VERSION=$(grep 'version:' mix.exs | sed 's/.*version: "\(.*\)".*/\1/')
                    echo "Using version from mix.exs: $VERSION"
                  fi
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

            - name: Prepare release assets
              run: |
                  mkdir -p release-assets
                  cd burrito_out
                  for file in *; do
                    if [ -f "$file" ]; then
                      if [[ "$file" == *.exe ]]; then
                        ext=".exe"
                        base_name="${file%.*}"
                      else
                        ext=""
                        base_name="$file"
                      fi

                      case "$base_name" in
                        *macos_x86*|*darwin_x86*)
                          new_name="pled-v${{ steps.version.outputs.VERSION }}-macos-x86_64${ext}"
                          ;;
                        *macos_arm*|*darwin_arm*|*macos)
                          new_name="pled-v${{ steps.version.outputs.VERSION }}-macos-arm64${ext}"
                          ;;
                        *linux_x86*)
                          new_name="pled-v${{ steps.version.outputs.VERSION }}-linux-x86_64${ext}"
                          ;;
                        *linux_arm*)
                          new_name="pled-v${{ steps.version.outputs.VERSION }}-linux-arm64${ext}"
                          ;;
                        *windows*)
                          new_name="pled-v${{ steps.version.outputs.VERSION }}-windows-x86_64${ext}"
                          ;;
                        *)
                          new_name="pled-v${{ steps.version.outputs.VERSION }}-${base_name}${ext}"
                          ;;
                      esac

                      cp "$file" "../release-assets/$new_name"
                      echo "Prepared: $new_name"
                    fi
                  done

            - name: Generate checksums
              run: |
                  cd release-assets
                  sha256sum * > checksums.txt
                  echo "Generated checksums:"
                  cat checksums.txt

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: pled-binaries-v${{ steps.version.outputs.VERSION }}
                  path: release-assets/
                  retention-days: 30

            - name: Create GitHub Release (only on tag)
              if: startsWith(github.ref, 'refs/tags/v')
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      ## Changes
                      Auto-generated release with cross-platform binaries.

                      ## Downloads
                      - macOS (ARM64): `pled-${{ github.ref_name }}-macos-arm64`
                      - macOS (x86_64): `pled-${{ github.ref_name }}-macos-x86_64`
                      - Linux (ARM64): `pled-${{ github.ref_name }}-linux-arm64`
                      - Linux (x86_64): `pled-${{ github.ref_name }}-linux-x86_64`
                      - Windows (x86_64): `pled-${{ github.ref_name }}-windows-x86_64.exe`

                      Verify downloads using `checksums.txt`.
                  files: release-assets/*
                  draft: false
                  prerelease: false
                  token: ${{ secrets.GITHUB_TOKEN }}
